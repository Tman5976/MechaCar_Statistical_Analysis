setwd("C:/Users/Tony/Downloads")
setwd("C:/Users/Tony/Desktop")
library(readr)
demo <- read_csv("demo.csv")
View(demo)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo_table)
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
demo_table2 <- fromJSON(txt='demo.json')
library(jsonlite)
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
x[3]
x <- c(3, 3, 2, 2, 5, 5, 8, 9)
x[3]
View(demo_table)
demo_table[3, "Year"]
demo_table[3, 3]
demo_table$"Vehicle_Class"
demo_table$"vehicle_Class"[2]
demo_table$"Vehicle_Class"[2]
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
?subset()
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(filter_table2)
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$price > 10000) & (demo_table2$drive == "4wd"),]
?sample()
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
num_rows <- 1:nrow(demo_table)
sample_rows <- sample(num_rows, 3)
demo_table[sample_rows,]
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
View(summarize_demo)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
library(tidyverse)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
?spread()
wide_table <- long_table %>% spread(key="Metric",value="Score")
?ggplot()
head(mpg)
plt <- ggplot(mpg,aes(x=class))
plt + geombar()
plt + geombar()
plt + geom_bar()
?geom_bar
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count))
plt + geom_col()
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") #plot bar plot with labels
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot bar plot with labels
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
View(plt)
plt + geom_line()
plt + geom_line() + + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
?shapiro.test()
shapiro.test(mtcars$wt)
?sample_n()
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
plt <- ggplot(sample_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
?t/test()
?t.test()
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
<-
<-
sample_table <- population_table %>% sample_n(50) #generate 50 randomly sampled data points
sample_table2 <- population_table %>% sample_n(50) #generate another 50 randomly sampled data points
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven)) #compare means of two samples
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T) #compare the mean difference between two samples
?aov()
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt))
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
head(used_cars)
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
plt + geom_point() #create a scatter plot
cor(used_cars$Miles_Driven,used_cars$Selling_Price) #calculate correlation coefficient
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
cor(used_matrix)
lm(qsec ~ hp,mtcars) #create linear model
lm1 <- lm(qsec ~ hp,mtcars) #create linear model
summary(lm1)
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
lm2 <- lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm2)
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
setwd("C:/Users/Tony/Desktop/Boot-Camp-Analysis/MechaCar_Statistical_Analysis")
library(dplyr)
cars <- read.csv(file="MechaCar_mpg.csv")
View(cars)
lm1 <- lm(mpg ~ AWD + ground_clearance + spoiler_angle + vehicle_angle +
vehicle_weight + vehicle_length, data = cars)
lm1 <- lm(mpg ~ AWD + ground_clearance + spoiler_angle +
vehicle_weight + vehicle_length, data = cars)
summary(lm1)
coils <- read.csv(file="Suspension_Coil.csv")
summary(coils[["PSI"]])
summarize(coils[["PSI"]])
lm1
psi_summary <- coils %>%(Mean=mean(PSI))
library(tidyverse)
psi_summary <- coils %>% Mean=mean(PSI)
psi_summary <- coils %>% (Mean=mean(PSI), .groups = "keep")
psi_summary <- coils %>% (Mean=mean(PSI) .groups = "keep")
total_summary <- mecha_coil %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Var_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),
Num_Coil=n(), .groups = 'keep')
total_summary <- coils %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Var_PSI=var(PSI),
Std_Dev_PSI=sd(PSI),
Num_Coil=n(), .groups = 'keep')
psi_summary <- coils %>% summarize(Mean_PSI=mean(PSI))
psi_summary
psi_summary <- coils %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI))
psi_summary
?summarize()
psi_summary <- coils %>% summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Variance_PSI=var(PSI),
SD_PSI=sd(PSI))
psi_summary
lot_summary <- coils %>% group_by(Manufacturing_Lot) %>% +
summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Variance_PSI=var(PSI),
SD_PSI=sd(PSI))
lot_summary <- coils %>% group_by(Manufacturing_Lot) %>%
+ summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Variance_PSI=var(PSI),
SD_PSI=sd(PSI))
lot_summary <- coils %>% group_by(Manufacturing_Lot) %>%
summarize(Mean_PSI=mean(PSI),
Median_PSI=median(PSI),
Variance_PSI=var(PSI),
SD_PSI=sd(PSI))
lot_summary
t.test(lot_summary)
t.test(lot_summary$Mean_PSI)
t.test(lot_summary$Mean_PSI,mu=1500)
t.test(colis$PSI,mu=1500)
t.test(coils$PSI,mu=1500)
?t.test()
t.test(coils$PSI,mu=1500,subset(coils$Manufacturing_Lot))
t.test(coils$PSI,mu=1500,subset(coils$Manufacturing_Lot&Lot1))
library(dplyr)
coils <- read.csv(file="Suspension_Coil.csv")
t.test(coils$PSI,mu=1500,subset(coils$Manufacturing_Lot&Lot1))
t.test(coils$PSI,mu=1500,subset(coils$Manufacturing_Lot$Lot1))
Lot1 <- subset(coils, ManufacturingLot$Lot1)
Lot1 <- subset(coils, Manufacturing_Lot$Lot1)
Lot1 <- subset(coils, Manufacturing_Lot, Lot1)
?subset()
Lot1 <- subset(coils, Manufacturing_Lot=Lot1)
Lot2 <- subset(coils, Manufacturing_Lot=Lot2)
Lot3 <- subset(coils, Manufacturing_Lot=Lot3)
t.test(coils$PSI,mu=1500, Lot1)
?t.test()
t.test(Lot1$PSI,mu=1500)
t.test(Lot2$PSI,mu=1500)
Lot1 <- subset(coils, Manufacturing_Lot=="Lot1")
t.test(Lot1$PSI,mu=1500)
Lot2 <- subset(coils, Manufacturing_Lot=="Lot2")
Lot3 <- subset(coils, Manufacturing_Lot=="Lot3")
t.test(Lot2$PSI,mu=1500)
t.test(Lot3$PSI,mu=1500)
t.test(coils$PSI,mu=1500)
cars <- read.csv(file="MechaCar_mpg.csv")
